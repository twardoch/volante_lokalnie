name: Release

on:
  push:
    tags: ["v*"]

permissions:
  contents: write
  id-token: write

jobs:
  test:
    name: Test Before Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install UV
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          python-version: "3.12"
          enable-cache: true

      - name: Install dependencies
        run: uv pip install --system ".[dev,test]"

      - name: Run tests
        run: uv run pytest -v --cov=src/volante_lokalnie --cov-report=xml tests/

      - name: Run linting
        run: |
          uv run ruff check src/ tests/ scripts/
          uv run ruff format --check src/ tests/ scripts/
          uv run mypy src/ tests/ --config-file=pyproject.toml

  build-binaries:
    name: Build Binary (${{ matrix.os }})
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            binary-name: volante-lokalnie-linux
            artifact-name: linux-binary
          - os: windows-latest
            binary-name: volante-lokalnie-windows.exe
            artifact-name: windows-binary
          - os: macos-latest
            binary-name: volante-lokalnie-macos
            artifact-name: macos-binary
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install UV
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          python-version: "3.12"
          enable-cache: true

      - name: Install dependencies and PyInstaller
        run: |
          uv pip install --system ".[dev,test]"
          uv pip install --system pyinstaller

      - name: Build binary
        run: |
          uv run pyinstaller --onefile --name ${{ matrix.binary-name }} --add-data "src/volante_lokalnie/volante_lokalnie.tcss${{ matrix.os == 'windows-latest' && ';' || ':' }}volante_lokalnie/" src/volante_lokalnie/__main__.py

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: dist/${{ matrix.binary-name }}*

  release:
    name: Release to PyPI
    needs: [test, build-binaries]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/volante_lokalnie
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install UV
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          python-version: "3.12"
          enable-cache: true

      - name: Install build tools
        run: uv pip install --system build hatchling hatch-vcs

      - name: Build distributions
        run: uv run python -m build --outdir dist

      - name: Verify distribution files
        run: |
          ls -la dist/
          test -n "$(find dist -name '*.whl')" || (echo "Wheel file missing" && exit 1)
          test -n "$(find dist -name '*.tar.gz')" || (echo "Source distribution missing" && exit 1)

      - name: Download binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move binaries to dist
        run: |
          mkdir -p dist/binaries
          find artifacts -name "volante-lokalnie-*" -type f -exec cp {} dist/binaries/ \;
          ls -la dist/binaries/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
            dist/binaries/*
          generate_release_notes: true
          body: |
            ## Installation

            ### Via pip
            ```bash
            pip install volante-lokalnie
            ```

            ### Binary Downloads
            - **Linux**: Download `volante-lokalnie-linux`
            - **Windows**: Download `volante-lokalnie-windows.exe`
            - **macOS**: Download `volante-lokalnie-macos`

            Make the binary executable and run:
            ```bash
            ./volante-lokalnie-linux --help
            ```

            ## Changelog
            See [CHANGELOG.md](https://github.com/twardoch/volante_lokalnie/blob/main/CHANGELOG.md) for detailed changes.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 